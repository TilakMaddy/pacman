{"version":3,"sources":["setup.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","GameBoard.js","Pacman.js","Ghost.js","ghostMoves.js","index.js"],"names":["GRID_SIZE","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","GameBoard","DOMGrid","pos","objectT","grid","classList","contains","dotCount","level","innerHTML","style","cssText","forEach","squareValue","div","document","createElement","add","append","push","classes","remove","deg","transform","character","shouldMove","getNextMove","objectExists","bind","nextMovePos","direction","makeMove","classesToRemove","classesToAdd","rotateDiv","dir","removeObject","addObject","setNewPos","gameWin","board","createGrid","Pacman","speed","timer","powerPill","e","keyCode","key","Ghost","startPos","name","isScared","objectExist","nextPos","randomMovement","position","keys","Object","Math","floor","random","length","soundDot","soundPill","soundGameStart","soundGameOver","soundGhost","gameGrid","querySelector","scoreTable","startButton","levels","gameBoard","createGameboard","POWER_PILL_TIME","GLOBAL_SPEED","score","currentLevel","powerPillActive","powerPillTimer","playAudio","effect","Audio","play","gameOver","pacman","removeEventListener","handleKeyInput","showGameStatus","clearInterval","checkCollision","ghosts","collidedGhost","find","ghost","gameLoop","moveCharacter","clearTimeout","setTimeout","startGame","addEventListener","setInterval","target","querySelectorAll","butt","levelStr","id","parseInt"],"mappings":";AAsDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,WAAA,QAAA,YAAA,QAAA,WAAA,QAAA,UAAA,QAAA,eAAA,EAtDA,IAAMA,EAAY,GAsDlB,QAAA,UAAA,EArDA,IAAMC,EAAY,GAqDlB,QAAA,UAAA,EApDA,IAAMC,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAW,EACXC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAAWL,EACXM,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SAAUL,EACVM,SAAU,KAiCP,QAAA,WAAA,EA7BA,IAAMI,EAAc,CACzBC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,OAAQ,SACRC,UAAW,QAiBN,QAAA,YAAA,EAbA,IAAMC,EAAa,CACxBb,EAAYC,MACZD,EAAYE,KACZF,EAAYG,IACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,KACZN,EAAYO,MACZP,EAAYQ,KACZR,EAAYS,OACZT,EAAYY,WAGP,QAAA,WAAA,EAAA,IAAME,EAAQ,CACnB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"src.cfdd123e.js","sourceRoot":"src","sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 25; // in pixels\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\n\nexport default class GameBoard {\n\n  constructor(DOMGrid) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid = DOMGrid;\n  }\n\n  createGrid(level) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid.innerHTML = '';\n    this.DOMGrid.style.cssText = `\n      grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);\n    `;\n\n    level.forEach(squareValue => {\n      const div = document.createElement('div');\n      div.classList.add('square', CLASS_LIST[squareValue]);\n      div.style.cssText = `\n        width: ${CELL_SIZE}px;\n        height: ${CELL_SIZE}px;\n      `;\n      this.DOMGrid.append(div);\n      this.grid.push(div);\n      if(OBJECT_TYPE.DOT == CLASS_LIST[squareValue])\n        this.dotCount++;\n    });\n\n  }\n\n  addObject(pos, classes) {\n    this.grid[pos].classList.add(...classes);\n  }\n\n  removeObject(pos, classes) {\n    this.grid[pos].classList.remove(...classes);\n  }\n\n  objectExists = (pos, objectT) => {\n    return this.grid[pos].classList.contains(objectT);\n  }\n\n  rotateDiv(pos, deg) {\n    this.grid[pos].style.transform = `rotate(${deg}deg)`;\n  }\n\n  moveCharacter(character) {\n    if(character.shouldMove()) {\n\n      const { nextMovePos, direction } =\n        character.getNextMove(this.objectExists.bind(this));\n\n      const { classesToRemove, classesToAdd } = character.makeMove();\n\n      if(character.rotation && character.nextMovePos !== character.pos) {\n        this.rotateDiv(nextMovePos, character.dir.rotation);\n        this.rotateDiv(character.pos, 0);\n      }\n\n      this.removeObject(character.pos, classesToRemove);\n      this.addObject(nextMovePos, classesToAdd);\n\n      character.setNewPos(nextMovePos, direction);\n    }\n  }\n\n  showGameStatus(gameWin) {\n    const div = document.createElement('div');\n    div.classList.add('game-status');\n    div.innerHTML = `\n      ${gameWin ? 'WIN !' : 'GAME OVER' }\n    `;\n    this.DOMGrid.append(div);\n  }\n\n  static createGameboard(DOMGrid, level) {\n    const board = new this(DOMGrid);\n    board.createGrid(level);\n    return board;\n  }\n\n};","import { OBJECT_TYPE, DIRECTIONS } from \"./setup\";\n\nexport default class Pacman {\n\n  constructor(pos, speed) {\n\n    this.pos = pos;\n    this.speed = speed;\n    this.dir = null;\n    this.timer = 0;\n    this.powerPill = false;\n    this.rotation = true; // we will rotate when we change direction\n\n  }\n\n  shouldMove() {\n\n    if(!this.dir) return false;\n\n    if(this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n\n    this.timer++;\n  }\n\n  getNextMove(objectExists) {\n\n    let nextMovePos = this.pos + this.dir.movement;\n\n    if(\n      objectExists(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    ) {\n      nextMovePos = this.pos;\n    }\n\n    return {\n      nextMovePos, direction: this.dir\n    }\n\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.PACMAN];\n    const classesToAdd = [OBJECT_TYPE.PACMAN];\n    return  { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(pos){\n    this.pos = pos;\n  }\n\n  handleKeyInput(e, objectExists) {\n\n    if(!(e.keyCode >= 37 && e.keyCode <= 40))\n      return;\n\n    const dir = DIRECTIONS[e.key];\n    const nextMovePos = this.pos + dir.movement;\n\n    if(objectExists(nextMovePos, OBJECT_TYPE.WALL)\n        || objectExists(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n     )\n      return;\n\n    this.dir = dir;\n\n  }\n\n}","import { DIRECTIONS, OBJECT_TYPE } from './setup';\n\nexport default class Ghost {\n\n  constructor(speed = 5, startPos, movement, name) {\n\n    this.name = name;\n    this.movement = movement;\n    this.startPos = startPos;\n    this.pos = startPos;\n    this.speed = speed;\n    this.timer = 0;\n    this.isScared = false;\n    this.rotation = false;\n    this.dir = DIRECTIONS.ArrowRight;\n\n  }\n\n  shouldMove() {\n    if(this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n    this.timer++;\n  }\n\n  getNextMove(objectExist) {\n    // Call move algoritm here\n    const { nextMovePos, direction } = this.movement(\n      this.pos,\n      this.dir,\n      objectExist\n    );\n    return { nextMovePos, direction };\n  }\n\n  makeMove() {\n\n    const classesToRemove = [\n      OBJECT_TYPE.GHOST,\n      OBJECT_TYPE.SCARED,\n      this.name\n    ];\n\n    let classesToAdd = [\n      OBJECT_TYPE.GHOST,\n      this.name\n    ];\n\n    if(this.isScared)\n      classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n\n    return {\n      classesToAdd,\n      classesToRemove\n    }\n\n  }\n\n  setNewPos(nextPos, dir) {\n    this.dir = dir;\n    this.pos = nextPos;\n  }\n\n}\n\n\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\n\n// Primitive random movement.\nexport function randomMovement(position, direction, objectExist) {\n  let dir = direction;\n  let nextMovePos = position + dir.movement;\n  // Create an array from the diretions objects keys\n  const keys = Object.keys(DIRECTIONS);\n\n  while (\n    objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n    objectExist(nextMovePos, OBJECT_TYPE.GHOST)\n  ) {\n    // Get a random key from that array\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    // Set the new direction\n    dir = DIRECTIONS[key];\n    // Set the next move\n    nextMovePos = position + dir.movement;\n  }\n\n  return { nextMovePos, direction: dir };\n}\n","import { LEVEL, OBJECT_TYPE } from './setup';\nimport GameBoard from './GameBoard';\nimport Pacman from './Pacman';\nimport Ghost from './Ghost';\nimport { randomMovement } from './ghostMoves';\n\nconst soundDot = './sounds/munch.wav';\nconst soundPill = './sounds/pill.wav';\nconst soundGameStart = './sounds/game_start.wav';\nconst soundGameOver = './sounds/death.wav';\nconst soundGhost = './sounds/eat_ghost.wav';\n\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector(\"#score\");\nconst startButton = document.querySelector(\"#start-button\");\nconst levels = document.querySelector('.levels');\nconst gameBoard = GameBoard.createGameboard(gameGrid, LEVEL);\n\nconst POWER_PILL_TIME = 10000;\nconst GLOBAL_SPEED = 80;\n\n// initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet currentLevel = 1;\n\n//keep track whether or not pacman ate the power pill which will be active\n// for a certain amount of time\n\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n// audio\nfunction playAudio(effect) {\n  new Audio(effect).play();\n}\n\nfunction gameOver(pacman, grid) {\n\n  playAudio(soundGameOver);\n\n  document.removeEventListener('keydown', e => {\n    pacman.handleKeyInput(e, gameBoard.objectExists.bind(gameBoard))\n  });\n\n  gameBoard.showGameStatus(gameWin);\n  clearInterval(timer);\n\n  startButton.classList.remove('hide');\n  levels.classList.remove('hide');\n\n}\n\nfunction checkCollision(pacman, ghosts) {\n  const collidedGhost = ghosts.find(ghost => ghost.pos == pacman.pos);\n\n  if(collidedGhost) {\n\n    if(pacman.powerPill) {\n\n      playAudio(soundGhost);\n\n      gameBoard.removeObject(collidedGhost.pos, [\n        OBJECT_TYPE.GHOST,\n        OBJECT_TYPE.SCARED,\n        collidedGhost.name\n      ]);\n      collidedGhost.pos = collidedGhost.startPos;\n      score+=100;\n    }\n\n    else {\n\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n      gameBoard.rotateDiv(pacman.pos, 0);\n      gameOver(pacman, gameGrid);\n    }\n  }\n}\n\nfunction gameLoop(pacman, ghosts) {\n  gameBoard.moveCharacter(pacman);\n  checkCollision(pacman, ghosts);\n\n  ghosts.forEach(ghost => {\n    gameBoard.moveCharacter(ghost);\n    checkCollision(pacman, ghosts);\n  });\n\n  if(gameBoard.objectExists(pacman.pos, OBJECT_TYPE.DOT)) {\n\n    playAudio(soundDot);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n    gameBoard.dotCount--;\n    score+=10;\n\n  }\n\n  if(gameBoard.objectExists(pacman.pos, OBJECT_TYPE.PILL)) {\n\n    playAudio(soundPill);\n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n    pacman.powerPill  = true;\n    score += 50;\n\n    clearTimeout(powerPillTimer);\n\n    powerPillTimer = setTimeout(function() {\n      pacman.powerPill = false;\n    }, POWER_PILL_TIME);\n\n  }\n\n  if(pacman.powerPill !== powerPillActive) {\n    powerPillActive = pacman.powerPill;\n    ghosts.forEach(ghost => ghost.isScared = powerPillActive);\n  }\n\n  if(gameBoard.dotCount === 0) {\n    gameWin = true;\n    gameOver(pacman, ghosts);\n  }\n\n  scoreTable.innerHTML = score;\n\n}\n\nfunction startGame() {\n\n  playAudio(soundGameStart);\n\n  gameWin = false;\n  powerPillActive = false;\n  score = 0;\n\n  startButton.classList.add('hide');\n  levels.classList.add('hide');\n\n  gameBoard.createGrid(LEVEL);\n  const pacman = new Pacman(287, 2);\n\n  gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n\n  document.addEventListener('keydown', e => {\n    pacman.handleKeyInput(e, gameBoard.objectExists.bind(gameBoard))\n  });\n\n  let ghosts = [\n    new Ghost(5, 188,  randomMovement, OBJECT_TYPE.BLINKY)\n  ];\n\n  if(currentLevel >= 2) {\n    ghosts.push(new Ghost(4, 209,  randomMovement, OBJECT_TYPE.PINKY));\n  }\n\n  if(currentLevel ===  3) {\n    ghosts.push(new Ghost(3, 230,  randomMovement, OBJECT_TYPE.INKY));\n    ghosts.push(new Ghost(2, 251,  randomMovement, OBJECT_TYPE.CLYDE));\n  }\n\n  timer = setInterval(() => {\n    gameLoop(pacman, ghosts)\n  }, GLOBAL_SPEED);\n\n}\n\nstartButton.addEventListener('click', startGame);\n\nlevels.addEventListener('click', function(e) {\n  if(e.target.classList.contains('level')) {\n\n    const allButtons = levels.querySelectorAll('a');\n    allButtons.forEach(butt => butt.classList.remove(\"active\"));\n\n    e.target.classList.add(\"active\");\n    const levelStr = e.target.id;\n    const level = parseInt(levelStr[levelStr.length - 1]);\n    currentLevel = level;\n  }\n});\n\n"]}